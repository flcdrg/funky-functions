#trigger:
#- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'efd51bc3-18b3-4e9a-95d0-608ba6610858'

  # Agent VM image name
  vmImageName: 'windows-latest'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/src/net31'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'publish'
        workingDirectory: 'src'
        projects: './src/funky-functions.sln'
        publishWebProjects: false
        arguments: --configuration Release

    - task: ArchiveFiles@2
      displayName: 'Archive net31'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/src/net31/bin/Release/netcoreapp3.1/publish'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-net31.zip
        replaceExistingArchive: true

    - task: ArchiveFiles@2
      displayName: 'Archive net50'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/src/net50/bin/Release/net5.0/publish'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-net50.zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-net31.zip
      artifact: net31

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-net50.zip
      artifact: net50

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy net3.1'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: function-net31
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId)-net31.zip'

          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy net5'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: function-net5
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId)-net50.zip'              